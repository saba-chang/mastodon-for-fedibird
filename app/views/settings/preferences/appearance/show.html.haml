- content_for :page_title do
  = t('settings.appearance')

- content_for :heading_actions do
  = button_tag t('generic.save_changes'), class: 'button', form: 'edit_user'

= simple_form_for current_user, url: settings_preferences_appearance_path, html: { method: :put, id: 'edit_user' } do |f|
  .fields-group.fields-row__column-6
    = f.input :locale, collection: I18n.available_locales, wrapper: :with_label, include_blank: false, label_method: lambda { |locale| human_locale(locale) }, selected: I18n.locale, hint: false

  - unless I18n.locale == :en
    .flash-message.translation-prompt
      #{t 'appearance.localization.body'} #{content_tag(:a, t('appearance.localization.guide_link_text'), href: t('appearance.localization.guide_link'), target: "_blank", rel: "noopener")}

  %h4= t 'appearance.themes'

  .fields-row
    .fields-row__column.fields-row__column-6
      = f.input :setting_theme, collection: Themes.instance.names, label_method: lambda { |theme| I18n.t("themes.#{theme}", default: theme) }, wrapper: :with_label, include_blank: false, hint: true

    .fields-row__column.fields-row__column-6
      = f.input :setting_theme_instance_ticker, collection: ['none', 'type-0', 'type-1', 'type-2', 'type-3'], label_method: lambda { |item| t("simple_form.hints.defaults.setting_theme_instance_ticker_#{item}") }, wrapper: :with_label, include_blank: false, hint: t('simple_form.hints.defaults.setting_theme_instance_ticker_html'), fedibird_features: true

  .fields-group
    = f.input :setting_hexagon_avatar, as: :boolean, wrapper: :with_label, hint: true, fedibird_features: true

  -# %h5= t 'appearance.custom_size.all'

  .fields-group
    = f.input :setting_content_font_size, as: :range, input_html: { min: 10, max: 20, list: 'content_font_size_label' },  wrapper: :with_label, hint: false, fedibird_features: true
    = f.input :setting_info_font_size, as: :range, input_html: { min: 10, max: 20, list: 'info_font_size_label' },  wrapper: :with_label, hint: false, fedibird_features: true
    = f.input :setting_content_emoji_reaction_size, as: :range, input_html: { min: 10, max: 48, list: 'emoji_reaction_size_label' }, wrapper: :with_label, false: true, fedibird_features: true

  -# %h5= t 'appearance.custom_size.multi_column'

  -# .fields-group
  -#   = f.input :setting_multi_column_customize, as: :boolean, wrapper: :with_label, hint: true, fedibird_features: true

  -# .fields-group.multi-column-customize
  -#   = f.input :setting_multi_column_content_font_size, as: :range, input_html: { min: 10, max: 24, list: 'content_font_size_label' },  wrapper: :with_label, hint: false, fedibird_features: true
  -#   = f.input :setting_multi_column_content_emoji_reaction_size, as: :range, input_html: { min: 10, max: 48 }, wrapper: :with_label, false: true, fedibird_features: true

  -# %h5= t 'appearance.custom_size.mobile'

  -# .fields-group
  -#   = f.input :setting_mobile_customize, as: :boolean, wrapper: :with_label, hint: true, fedibird_features: true

  -# .fields-group.mobile-customize
  -#   = f.input :setting_mobile_content_font_size, as: :range, input_html: { min: 10, max: 24, list: 'content_font_size_label' },  wrapper: :with_label, hint: false, fedibird_features: true
  -#   = f.input :setting_mobile_content_emoji_reaction_size, as: :range, input_html: { min: 10, max: 48 }, wrapper: :with_label, false: true, fedibird_features: true

  .fields-group
    = f.input :setting_theme_public, as: :boolean, wrapper: :with_label, hint: true, fedibird_features: true

  %h4= t 'appearance.advanced_web_interface'

  %p.hint= t 'appearance.advanced_web_interface_hint'

  .fields-group
    = f.input :setting_advanced_layout, as: :boolean, wrapper: :with_label, hint: false

  .fields-group
    = f.input :setting_enable_empty_column, as: :boolean, wrapper: :with_label, fedibird_features: true

  .fields-group
    = f.input :setting_default_column_width, collection: ['x080', 'x100', 'x125', 'x150', 'free'], label_method: lambda { |item| t("simple_form.hints.defaults.setting_default_column_width_#{item}") }, wrapper: :with_label, include_blank: false, fedibird_features: true

  %h4= t 'appearance.animations_and_accessibility'

  .fields-group
    = f.input :setting_use_pending_items, as: :boolean, wrapper: :with_label

  .fields-group
    = f.input :setting_auto_play_gif, as: :boolean, wrapper: :with_label, recommended: true
    = f.input :setting_reduce_motion, as: :boolean, wrapper: :with_label
    = f.input :setting_disable_swiping, as: :boolean, wrapper: :with_label
    = f.input :setting_system_font_ui, as: :boolean, wrapper: :with_label

  %h4= t 'appearance.joke'

  .fields-group
    = f.input :setting_disable_joke_appearance, as: :boolean, wrapper: :with_label, fedibird_features: true

  %h4= t 'appearance.toot_layout'

  .fields-group
    = f.input :setting_crop_images, as: :boolean, wrapper: :with_label

  %h4= t 'appearance.discovery'

  .fields-group
    = f.input :setting_trends, as: :boolean, wrapper: :with_label

  %h4= t 'appearance.confirmation_dialogs'

  .fields-group
    = f.input :setting_unfollow_modal, as: :boolean, wrapper: :with_label
    = f.input :setting_unsubscribe_modal, as: :boolean, wrapper: :with_label, fedibird_features: true
    = f.input :setting_boost_modal, as: :boolean, wrapper: :with_label
    = f.input :setting_delete_modal, as: :boolean, wrapper: :with_label
    = f.input :setting_post_reference_modal, as: :boolean, wrapper: :with_label, fedibird_features: true
    = f.input :setting_add_reference_modal, as: :boolean, wrapper: :with_label, fedibird_features: true
    = f.input :setting_unselect_reference_modal, as: :boolean, wrapper: :with_label, fedibird_features: true

  %h4= t 'appearance.sensitive_content'

  .fields-group
    = f.input :setting_display_media, collection: ['default', 'show_all', 'hide_all'],label_method: lambda { |item| t("simple_form.hints.defaults.setting_display_media_#{item}") }, hint: false, as: :radio_buttons, collection_wrapper_tag: 'ul', item_wrapper_tag: 'li', wrapper: :with_floating_label

  .fields-group
    = f.input :setting_use_blurhash, as: :boolean, wrapper: :with_label

  .fields-group
    = f.input :setting_expand_spoilers, as: :boolean, wrapper: :with_label

  .actions
    = f.button :button, t('generic.save_changes'), type: :submit
